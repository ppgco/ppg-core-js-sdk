import{AbstractProvider as a}from"./abstract-provider.js";import{assert as o}from"../../../utils/assert.js";function e(t,s){if(t==null)throw new Error(s||"expected non null value");return t}class d extends a{constructor(i){super();this.options=i;o(i.scope,"scope is required"),o(i.swPath,"swPath is required"),o(i.applicationServerKey,"applicationServerKey is required")}browserSupportsWebPush(){return typeof window<"u"&&"serviceWorker"in navigator&&"PushManager"in window&&"Notification"in window&&"fetch"in window&&ServiceWorkerRegistration.prototype.hasOwnProperty("showNotification")&&PushSubscription.prototype.hasOwnProperty("getKey")}async internalGetSubscription(){const i=await navigator.serviceWorker.getRegistration(this.options.scope);return i?(await navigator.serviceWorker.ready,await i.pushManager.getSubscription()):null}async isSubscribed(){return await this.getSubscription()!==null}async getSubscription(){const i=await this.internalGetSubscription();if(!i)return null;const r=i.toJSON();return{type:"vapid",p256dh:e(r.keys?.p256dh),auth:e(r.keys?.auth),endpoint:e(r.endpoint),publicKey:e(this.options.applicationServerKey),expirationTime:r.expirationTime||null}}async subscribe(){if(Notification.permission==="default"&&await Notification.requestPermission(),Notification.permission!=="granted")throw new Error("permission not granted");const i=await navigator.serviceWorker.register(this.options.swPath,{scope:this.options.scope,type:"module",updateViaCache:"all"});await navigator.serviceWorker.ready;const n=(await i.pushManager.subscribe({userVisibleOnly:typeof this.options.userVisibleOnly=="boolean"?this.options.userVisibleOnly:!0,applicationServerKey:this.options.applicationServerKey})).toJSON();return{type:"vapid",p256dh:e(n.keys?.p256dh),auth:e(n.keys?.auth),endpoint:e(n.endpoint),publicKey:e(this.options.applicationServerKey),expirationTime:n.expirationTime||null}}async unsubscribe(){const i=await this.internalGetSubscription();return i?i.unsubscribe():!0}}export{d as VapidProvider};
